########################################################################
# Pointwise - Proprietary software product of Pointwise, Inc.
#             Copyright (c) 1995-2012 Pointwise, Inc.
#             All rights reserved.
#
# module.mk for src\plugins\CaeUnsAMF plugin
########################################################################

########################################################################
########################################################################
#
#                   DO NOT EDIT THIS FILE
#
# To simplify SDK upgrades, the standard module.mk file should NOT be edited.
#
# If you want to modify a plugin's build process, you should rename
# modulelocal-sample.mk to modulelocal.mk and edit its settings.
#
# See the comments in modulelocal-sample.mk for more information.
#
#                   DO NOT EDIT THIS FILE
#
########################################################################
########################################################################

CaeUnsAMF_LOC := $(PLUGINS_LOC)/CaeUnsAMF
CaeUnsAMF_LIB := CaeUnsAMF$(DBG_SUFFIX)
CaeUnsAMF_CXX_LOC := $(CaeUnsAMF_LOC)
CaeUnsAMF_OBJ_LOC := $(PLUGINS_OBJ_LOC)/CaeUnsAMF

CaeUnsAMF_FULLNAME := lib$(CaeUnsAMF_LIB).$(SHLIB_SUFFIX)
CaeUnsAMF_FULLLIB := $(PLUGINS_DIST_DIR)/$(CaeUnsAMF_FULLNAME)

CaeUnsAMF_DEPS = \
	$(NULL)

MODCXXFILES := \
	runtimeWrite.cxx CaeUnsAMF.cxx \
	$(NULL)

# IMPORTANT:
# Must recompile the shared/XXX/.cxx files for each plugin. These .cxx files
# include the plugin specific settings defined in the ./CaeUnsAMF/*.h
# files.
CaeUnsAMF_SRC := \
	$(PLUGINS_RT_PWPSRC) \
	$(PLUGINS_RT_PWGMSRC) \
	$(PLUGINS_RT_CAEPSRC) \
	$(patsubst %,$(CaeUnsAMF_CXX_LOC)/%,$(MODCXXFILES))

CaeUnsAMF_SRC_CXX := $(filter %.cxx,$(MODCXXFILES))

# place the .o files generated from shared sources in the plugin's
# OBJ folder.
CaeUnsAMF_OBJ := \
	$(patsubst %.cxx,$(CaeUnsAMF_OBJ_LOC)/%.o,$(PLUGINS_RT_PWPFILES)) \
	$(patsubst %.cxx,$(CaeUnsAMF_OBJ_LOC)/%.o,$(PLUGINS_RT_PWGMFILES)) \
	$(patsubst %.cxx,$(CaeUnsAMF_OBJ_LOC)/%.o,$(PLUGINS_RT_CAEPFILES)) \
    $(patsubst %.cxx,$(CaeUnsAMF_OBJ_LOC)/%.o,$(CaeUnsAMF_SRC_CXX)) \
	$(NULL)

# To allow over-rides, search FIRST for headers in the local module's folder.
# For example, a site.h file in the local module's folder will preempt the
# file .../src/plugins/site.h
CaeUnsAMF_INCL = \
	-I$(CaeUnsAMF_LOC) \
	$(PLUGINS_RT_INCL) \
	$(NULL)

CaeUnsAMF_LIBS = \
	$(NULL)

CaeUnsAMF_MAINT_TARGETS := \
    CaeUnsAMF_info \
    CaeUnsAMF_install \
    CaeUnsAMF_installnow \
    CaeUnsAMF_uninstall


########################################################################
# Get (OPTIONAL) locally defined make targets. If a plugin developer wants
# to extend a plugin's make scheme, they should create a modulelocal.mk file
# in the plugin's base folder. To provide for future SDK upgrades, the standard
# module.mk file should NOT be directly edited.
#
ifneq ($(wildcard $(CaeUnsAMF_LOC)/modulelocal.mk),)
    CaeUnsAMF_DEPS += $(CaeUnsAMF_LOC)/modulelocal.mk
    include $(CaeUnsAMF_LOC)/modulelocal.mk
endif


# merge in plugin private settings

CaeUnsAMF_OBJ += \
    $(patsubst %.cxx,$(CaeUnsAMF_OBJ_LOC)/%.o,$(filter %.cxx,$(CaeUnsAMF_CXXFILES_PRIVATE))) \
	$(NULL)

CaeUnsAMF_SRC += \
	$(patsubst %,$(CaeUnsAMF_CXX_LOC)/%,$(CaeUnsAMF_CXXFILES_PRIVATE)) \
	$(NULL)

CaeUnsAMF_INCL += $(CaeUnsAMF_INCL_PRIVATE)
CaeUnsAMF_LIBS += $(CaeUnsAMF_LIBS_PRIVATE)
CaeUnsAMF_CXXFLAGS += $(CaeUnsAMF_CXXFLAGS_PRIVATE)
CaeUnsAMF_LDFLAGS += $(CaeUnsAMF_LDFLAGS_PRIVATE)
CaeUnsAMF_MAINT_TARGETS += $(CaeUnsAMF_MAINT_TARGETS_PRIVATE)
CaeUnsAMF_DEPS += $(CaeUnsAMF_DEPS_PRIVATE)

PLUGIN_MAINT_TARGETS += $(CaeUnsAMF_MAINT_TARGETS)
PLUGIN_OBJ += $(CaeUnsAMF_OBJ)

# add to plugin maint targets to the global .PHONY target
.PHONY: \
	$(CaeUnsAMF_MAINT_TARGETS) \
	$(NULL)


########################################################################
# Set the final build macros
CaeUnsAMF_CXXFLAGS += $(CXXFLAGS) $(PLUGINS_STDDEFS) $(CaeUnsAMF_INCL) \
    -DPWGM_HIDE_STRUCTURED_API


ifeq ($(machine),macosx)
CaeUnsAMF_LDFLAGS += -install_name "$(REL_BIN_TO_PW_LIB_DIR)/$(CaeUnsAMF_FULLNAME)"
else
CaeUnsAMF_LDFLAGS +=
endif


########################################################################
# list of plugin's build targets
#
CaeUnsAMF: $(CaeUnsAMF_FULLLIB)

$(CaeUnsAMF_FULLLIB): $(CaeUnsAMF_OBJ) $(CaeUnsAMF_DEPS)
	@echo "***"
	@echo "*** $@"
	@echo "***"
	@mkdir -p $(PLUGINS_DIST_DIR)
	$(SHLIB_LD) $(ARCH_FLAGS) $(CaeUnsAMF_LDFLAGS) -o $(CaeUnsAMF_FULLLIB) $(CaeUnsAMF_OBJ) $(CaeUnsAMF_LIBS) $(SYS_LIBS)

CaeUnsAMF_info:
	@echo ""
	@echo "--------------------------------------------------------------"
ifeq ($(machine),macosx)
	otool -L -arch all $(CaeUnsAMF_FULLLIB)
	@echo ""
endif
	file $(CaeUnsAMF_FULLLIB)
	@echo "--------------------------------------------------------------"
	@echo ""


########################################################################
# list of plugin's intermediate targets
#
$(CaeUnsAMF_OBJ_LOC):
	mkdir -p $(CaeUnsAMF_OBJ_LOC)

#.......................................................................
# build .d files for the plugin and each of the shared runtime sources
# the .d files will be placed in the plugins OBJ folder CaeUnsAMF_OBJ_LOC
$(CaeUnsAMF_OBJ_LOC)/%.d: $(CaeUnsAMF_CXX_LOC)/%.cxx
	@echo "Updating dependencies $(CaeUnsAMF_OBJ_LOC)/$*.d"
	@mkdir -p $(CaeUnsAMF_OBJ_LOC)
	@./depend.sh $(CaeUnsAMF_OBJ_LOC) $(CaeUnsAMF_CXXFLAGS) $< > $@

$(CaeUnsAMF_OBJ_LOC)/%.d: $(PLUGINS_RT_PWPLOC)/%.cxx
	@echo "Updating dependencies $(CaeUnsAMF_OBJ_LOC)/$*.d"
	@mkdir -p $(CaeUnsAMF_OBJ_LOC)
	@./depend.sh $(CaeUnsAMF_OBJ_LOC) $(CaeUnsAMF_CXXFLAGS) $< > $@

$(CaeUnsAMF_OBJ_LOC)/%.d: $(PLUGINS_RT_PWGMLOC)/%.cxx
	@echo "Updating dependencies $(CaeUnsAMF_OBJ_LOC)/$*.d"
	@mkdir -p $(CaeUnsAMF_OBJ_LOC)
	@./depend.sh $(CaeUnsAMF_OBJ_LOC) $(CaeUnsAMF_CXXFLAGS) $< > $@

$(CaeUnsAMF_OBJ_LOC)/%.d: $(PLUGINS_RT_CAEPLOC)/%.cxx
	@echo "Updating dependencies $(CaeUnsAMF_OBJ_LOC)/$*.d"
	@mkdir -p $(CaeUnsAMF_OBJ_LOC)
	@./depend.sh $(CaeUnsAMF_OBJ_LOC) $(CaeUnsAMF_CXXFLAGS) $< > $@

#.......................................................................
# build .o files for the plugin and each of the shared runtime sources.
# the .o files will be placed in the plugins OBJ folder CaeUnsAMF_OBJ_LOC
$(CaeUnsAMF_OBJ_LOC)/%.o: $(CaeUnsAMF_CXX_LOC)/%.cxx
	@echo "***"
	@echo "*** $*"
	@echo "***"
	@mkdir -p $(CaeUnsAMF_OBJ_LOC)
	$(CXX) $(CaeUnsAMF_CXXFLAGS) $(ARCH_FLAGS) -o $@ -c $<

$(CaeUnsAMF_OBJ_LOC)/%.o: $(PLUGINS_RT_PWPLOC)/%.cxx
	@echo "***"
	@echo "*** $*"
	@echo "***"
	@mkdir -p $(CaeUnsAMF_OBJ_LOC)
	$(CXX) $(CaeUnsAMF_CXXFLAGS) $(ARCH_FLAGS) -o $@ -c $<

$(CaeUnsAMF_OBJ_LOC)/%.o: $(PLUGINS_RT_PWGMLOC)/%.cxx
	@echo "***"
	@echo "*** $*"
	@echo "***"
	@mkdir -p $(CaeUnsAMF_OBJ_LOC)
	$(CXX) $(CaeUnsAMF_CXXFLAGS) $(ARCH_FLAGS) -o $@ -c $<

$(CaeUnsAMF_OBJ_LOC)/%.o: $(PLUGINS_RT_CAEPLOC)/%.cxx
	@echo "***"
	@echo "*** $*"
	@echo "***"
	@mkdir -p $(CaeUnsAMF_OBJ_LOC)
	$(CXX) $(CaeUnsAMF_CXXFLAGS) $(ARCH_FLAGS) -o $@ -c $<


########################################################################
# list of plugin's clean targets
#
CaeUnsAMF_cleandep:
	-$(RMR) $(CaeUnsAMF_OBJ_LOC)/*.d

CaeUnsAMF_clean:
	-$(RMR) $(CaeUnsAMF_OBJ_LOC)/*.{d,o}

CaeUnsAMF_distclean: CaeUnsAMF_clean
	-$(RMF) $(CaeUnsAMF_FULLLIB) > /dev/null 2>&1

########################################################################
# list of plugin's clean targets
#
CaeUnsAMF_install: install_validate CaeUnsAMF_installnow
	@echo "CaeUnsAMF Installed to '$(PLUGIN_INSTALL_FULLPATH)'"

CaeUnsAMF_installnow:
	-@$(CP) $(CaeUnsAMF_FULLLIB) "$(PLUGIN_INSTALL_FULLPATH)/libCaeUnsAMF.$(SHLIB_SUFFIX)"

CaeUnsAMF_uninstall:
	@echo "CaeUnsAMF Uninstalled from '$(PLUGIN_INSTALL_FULLPATH)'"
	-@$(RMF) "$(PLUGIN_INSTALL_FULLPATH)/libCaeUnsAMF.$(SHLIB_SUFFIX)"
